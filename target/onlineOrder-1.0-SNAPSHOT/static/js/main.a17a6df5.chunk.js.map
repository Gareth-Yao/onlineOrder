{"version":3,"sources":["utils.js","components/FoodList.js","components/LoginForm.js","components/MyCart.js","components/SignUpForm.js","App.js","reportWebVitals.js","index.js"],"names":["login","credential","loginUrl","username","password","fetch","method","headers","credentials","then","response","status","Error","signup","data","body","JSON","stringify","console","log","Option","Select","AddToCartButton","itemId","useState","loading","setLoading","title","type","icon","PlusOutlined","onClick","addItemToCart","message","success","catch","err","error","finally","FoodList","foodData","setFoodData","curRest","setCurRest","restaurants","setRestaurants","useEffect","json","resData","map","item","value","id","name","restId","placeholder","style","width","onSelect","marginTop","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","Item","extra","src","imageUrl","alt","height","display","price","LoginForm","state","onFinish","setState","props","onSuccess","render","margin","rules","required","prefix","UserOutlined","Password","LockOutlined","htmlType","React","Component","Text","Typography","MyCart","cartVisible","setCartVisible","cartData","setCartData","checking","setChecking","onCloseDrawer","shape","onClose","visible","footer","justifyContent","strong","totalPrice","marginRight","disabled","orderItemList","length","itemLayout","Meta","menuItem","description","SignupForm","displayModal","handleCancel","signupOnClick","onCancel","destroyOnClose","initialValues","remember","preserve","Title","Header","Layout","Content","App","authed","setAuthed","className","level","color","lineHeight","marginBottom","SignUpForm","padding","maxHeight","overflowY","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a17a6df5.chunk.js","sourcesContent":["export const login = (credential) => {\r\n    const loginUrl = `/login?username=${credential.username}&password=${credential.password}`;\r\n\r\n    return fetch(loginUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n    }).then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to log in\");\r\n        }\r\n    });\r\n};\r\n\r\nexport const signup = (data) => {\r\n    const signupUrl = \"/signup\";\r\n\r\n    return fetch(signupUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n    }).then((response) => {\r\n        console.log(response);\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to sign up\");\r\n        }\r\n    });\r\n};\r\n\r\nexport const getMenus = (restId) => {\r\n    return fetch(`/restaurant/${restId}/menu`).then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to get menus\");\r\n        }\r\n\r\n        return response.json();\r\n    });\r\n};\r\n\r\nexport const getRestaurants = () => {\r\n    return fetch(\"/restaurants\").then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to get restaurants\");\r\n        }\r\n\r\n        return response.json();\r\n    });\r\n};\r\n\r\nexport const getCart = () => {\r\n    return fetch(\"/cart\").then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to get shopping cart data\");\r\n        }\r\n\r\n        return response.json();\r\n    });\r\n};\r\n\r\nexport const checkout = () => {\r\n    return fetch(\"/checkout\").then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to checkout\");\r\n        }\r\n    });\r\n};\r\n\r\nexport const addItemToCart = (itemId) => {\r\n    return fetch(`/order/${itemId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n    }).then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to add menu item to shopping cart\");\r\n        }\r\n    });\r\n};\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport {Select, message ,List, Card, Tooltip, Button} from \"antd\"\r\nimport {addItemToCart, getMenus, getRestaurants} from \"../utils\"\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nconst { Option } = Select;\r\nconst AddToCartButton = ({ itemId }) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const AddToCart = () => {\r\n        setLoading(true);\r\n        addItemToCart(itemId)\r\n            .then(() => message.success(`Successfully add item`))\r\n            .catch((err) => message.error(err.message))\r\n            .finally(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Tooltip title=\"Add to shopping cart\">\r\n            <Button\r\n                loading={loading}\r\n                type=\"primary\"\r\n                icon={<PlusOutlined />}\r\n                onClick={AddToCart}\r\n            />\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nfunction FoodList() {\r\n    const [foodData, setFoodData] = useState([]);\r\n    const [curRest, setCurRest] = useState();\r\n    const [restaurants, setRestaurants] = useState([]);\r\n    const [loading, setLoading] = useState();\r\n\r\n    useEffect( () => {\r\n        setLoading(true);\r\n        getRestaurants().then( resData => {\r\n\r\n                setRestaurants(resData.map((item) => {\r\n                    return <Option key = {item.id} value={item.id}>{item.name}</Option>;\r\n                }))\r\n            }\r\n        )\r\n            .catch(err => {\r\n                message.error(err.message);\r\n            })\r\n            .finally( () => {\r\n                setLoading(false);\r\n            })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (curRest) {\r\n            setLoading(true);\r\n            getMenus(curRest)\r\n                .then((data) => {\r\n                    setFoodData(data);\r\n                })\r\n                .catch((err) => {\r\n                    message.error(err.message);\r\n                })\r\n                .finally(() => {\r\n                    setLoading(false);\r\n                });\r\n        }\r\n    }, [curRest]);\r\n    return (\r\n        <div>\r\n            <Select value = {curRest}\r\n                    placeholder={\"Select a restaurant\"}\r\n                    style={{ width: 300 }}\r\n                    loading={loading}\r\n                    onSelect={(value)  => setCurRest(value)}>\r\n\r\n                {restaurants}\r\n\r\n            </Select>\r\n            {curRest && (\r\n                <List\r\n                    style={{ marginTop: 20 }}\r\n                    loading={loading}\r\n                    grid={{\r\n                        gutter: 16,\r\n                        xs: 1,\r\n                        sm: 2,\r\n                        md: 3,\r\n                        lg: 3,\r\n                        xl: 4,\r\n                        xxl: 4,\r\n                    }}\r\n                    dataSource={foodData}\r\n                    renderItem={(item) => (\r\n                        <List.Item>\r\n\r\n                            <Card\r\n                                title={<Tooltip title={item.name}>{item.name}</Tooltip>}\r\n                                extra={<AddToCartButton itemId={item.id} />}\r\n                            >\r\n                                <img\r\n                                    src={item.imageUrl}\r\n                                    alt={item.name}\r\n                                    style={{ height: \"auto\", width: \"100%\", display: \"block\" }}\r\n                                />\r\n                                {`Price: ${item.price}`}\r\n                            </Card>\r\n\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            )}\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default FoodList","import React, {Component} from 'react'\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { login } from \"../utils\";\r\n/*use rcc*/\r\nclass LoginForm extends React.Component {\r\n    state = {\r\n        loading: false,\r\n    };\r\n\r\n    onFinish = (data) => {\r\n        this.setState({\r\n            loading: true,\r\n        });\r\n        login(data)\r\n            .then(() => {\r\n                message.success(`Login Successful`);\r\n                this.props.onSuccess();\r\n            })\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n                this.setState({\r\n                    loading: false,\r\n                });\r\n            })\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <Form\r\n                name=\"normal_login\"\r\n                onFinish={this.onFinish}\r\n                style={{\r\n                    width: 300,\r\n                    margin: \"auto\",\r\n                }}\r\n            >\r\n                <Form.Item\r\n                    name=\"username\"\r\n                    rules={[{ required: true, message: \"Please input your Username!\" }]}\r\n                >\r\n                    <Input prefix={<UserOutlined />} placeholder=\"Username\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[{ required: true, message: \"Please input your Password!\" }]}\r\n                >\r\n                    <Input.Password prefix={<LockOutlined />} placeholder=\"Password\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={this.state.loading}>\r\n                        Login\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    };\r\n}\r\n\r\nexport default LoginForm;\r\n","import { Button, Drawer, List, message, Typography } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { checkout, getCart } from \"../utils\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst MyCart = () => {\r\n    const [cartVisible, setCartVisible] = useState(false);\r\n    const [cartData, setCartData] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const [checking, setChecking] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!cartVisible) {\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        getCart()\r\n            .then((data) => {\r\n                setCartData(data);\r\n            })\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            });\r\n    }, [cartVisible]);\r\n\r\n    const onCheckOut = () => {\r\n        setChecking(true);\r\n        checkout()\r\n            .then(() => {\r\n                message.success(\"Successfully checkout\");\r\n                setCartVisible(false);\r\n            })\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            })\r\n            .finally(() => {\r\n                setChecking(false);\r\n            });\r\n    };\r\n\r\n    const onCloseDrawer = () => {\r\n        setCartVisible(false);\r\n    };\r\n\r\n    const onOpenDrawer = () => {\r\n        setCartVisible(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button type=\"primary\" shape=\"round\" onClick={onOpenDrawer}>\r\n                Cart\r\n            </Button>\r\n            <Drawer\r\n                title=\"My Shopping Cart\"\r\n                onClose={onCloseDrawer}\r\n                visible={cartVisible}\r\n                width={520}\r\n                footer={\r\n                    <div\r\n                        style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                        }}\r\n                    >\r\n                        <Text strong={true}>{`Total price: $${cartData?.totalPrice}`}</Text>\r\n                        <div>\r\n                            <Button onClick={onCloseDrawer} style={{ marginRight: 8 }}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button\r\n                                onClick={onCheckOut}\r\n                                type=\"primary\"\r\n                                loading={checking}\r\n                                disabled={loading || cartData?.orderItemList?.length === 0}\r\n                            >\r\n                                Checkout\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            >\r\n                <List\r\n                    loading={loading}\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={cartData?.orderItemList}\r\n                    renderItem={(item) => (\r\n                        <List.Item>\r\n                            <List.Item.Meta\r\n                                title={item.menuItem.name}\r\n                                description={`$${item.price}`}\r\n                            />\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </Drawer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MyCart;","import { Button, Form, Input, message, Modal } from \"antd\";\r\nimport React from \"react\";\r\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { signup } from \"../utils\";\r\n\r\nclass SignupForm extends React.Component {\r\n    state = {\r\n        displayModal: false,\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            displayModal: false,\r\n        });\r\n    };\r\n\r\n    signupOnClick = () => {\r\n        this.setState({\r\n            displayModal: true,\r\n        });\r\n    };\r\n\r\n    onFinish = (data) => {\r\n        signup(data)\r\n            .then(() => {\r\n                this.setState({\r\n                    displayModal: false,\r\n                });\r\n                message.success(`Successfully signed up`);\r\n            })\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            });\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <>\r\n                <Button shape=\"round\" type=\"primary\" onClick={this.signupOnClick}>\r\n                    Register\r\n                </Button>\r\n                <Modal\r\n                    title=\"Register\"\r\n                    visible={this.state.displayModal}\r\n                    onCancel={this.handleCancel}\r\n                    footer={null}\r\n                    destroyOnClose={true}\r\n                >\r\n                    <Form\r\n                        name=\"normal_register\"\r\n                        initialValues={{ remember: true }}\r\n                        onFinish={this.onFinish}\r\n                        preserve={false}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"email\"\r\n                            rules={[{ required: true, message: \"Please input your email!\" }]}\r\n                        >\r\n                            <Input prefix={<UserOutlined />} placeholder=\"Email\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[\r\n                                { required: true, message: \"Please input your password!\" },\r\n                            ]}\r\n                        >\r\n                            <Input prefix={<LockOutlined />} placeholder=\"Password\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            rules={[\r\n                                { required: true, message: \"Please input your first name!\" },\r\n                            ]}\r\n                        >\r\n                            <Input placeholder=\"firstname\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            rules={[\r\n                                { required: true, message: \"Please input your last name!\" },\r\n                            ]}\r\n                        >\r\n                            <Input placeholder=\"lastname\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Register\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </>\r\n        );\r\n    };\r\n}\r\n\r\nexport default SignupForm;\r\n\r\n\r\n\r\n","import {Layout, Typography} from \"antd\";\nimport FoodList from \"./components/FoodList\"\nimport './App.css';\nimport LoginForm from \"./components/LoginForm\"\nimport {useState} from \"react\"\nimport MyCart from \"./components/MyCart\"\nimport SignUpForm from \"./components/SignUpForm\"\n\nconst { Title } = Typography;\nconst {Header, Content} = Layout;\n\nfunction App() {\n    const [authed, setAuthed] = useState(false);\n  return (\n    <Layout style={{height: \"100vh\"}}>\n      <Header>\n          <div className =\"header\">\n              <Title level={2} style={{ color: \"white\", lineHeight: \"inherit\", marginBottom: 0 }}>SinoDash</Title>\n            <div>{authed ? <MyCart /> : <SignUpForm/>}</div>\n          </div>\n      </Header>\n      <Content style={{\n          padding : \"50px\",\n          maxHeight: \"calc(100% - 64px)\",\n          overflowY : \"auto\"\n      }}>\n          {authed ? (\n              <FoodList />\n          ) : (\n              <LoginForm onSuccess={() => setAuthed(true)} />\n          )}\n\n      </Content>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}